local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\124\72","\97\82\102\90\222"),function(v42) if (v9(v42,5 -3 )==81) then local v98=0;while true do if (v98==0) then v30=v8(v11(v42,1,2 -1 ));return "";end end else local v99=0;local v100;while true do if (v99==0) then v100=v10(v8(v42,16));if v30 then local v124=0;local v125;while true do if (1==v124) then return v125;end if (v124==0) then v125=v13(v100,v30);v30=nil;v124=1;end end else return v100;end break;end end end end);local function v31(v43,v44,v45) if v45 then local v101=(v43/(2^(v44-1)))%(2^(((v45-(1 -0)) -(v44-1)) + 1)) ;return v101-(v101%1) ;else local v102=2^(v44-1) ;return (((v43%(v102 + v102))>=v102) and (2 -1)) or 0 ;end end local function v32() local v46=v9(v27,v29,v29);v29=v29 + 1 ;return v46;end local function v33() local v47,v48=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;return (v48 * (875 -(555 + 64))) + v47 ;end local function v34() local v49,v50,v51,v52=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;return (v52 * 16777216) + (v51 * 65536) + (v50 * 256) + v49 ;end local function v35() local v53=v34();local v54=v34();local v55=1;local v56=(v31(v54,1,951 -(857 + 74) ) * (2^32)) + v53 ;local v57=v31(v54,21,31);local v58=((v31(v54,32)==1) and  -(569 -(367 + 201))) or 1 ;if (v57==0) then if (v56==0) then return v58 * (927 -(214 + 713)) ;else v57=1;v55=0;end elseif (v57==2047) then return ((v56==0) and (v58 * (1/0))) or (v58 * NaN) ;end return v16(v58,v57-1023 ) * (v55 + (v56/((1 + 1)^52))) ;end local function v36(v59) local v60=0;local v61;local v62;while true do if (v60==1) then v61=v11(v27,v29,(v29 + v59) -1 );v29=v29 + v59 ;v60=2;end if (v60==0) then v61=nil;if  not v59 then v59=v34();if (v59==0) then return "";end end v60=1;end if (2==v60) then v62={};for v110=1, #v61 do v62[v110]=v10(v9(v11(v61,v110,v110)));end v60=3;end if (v60==3) then return v14(v62);end end end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v63={};local v64={};local v65={};local v66={v63,v64,nil,v65};local v67=v34();local v68={};for v76=1,v67 do local v77=0;local v78;local v79;while true do if (v77==0) then v78=v32();v79=nil;v77=1;end if (v77==1) then if (v78==1) then v79=v32()~=0 ;elseif (v78==2) then v79=v35();elseif (v78==3) then v79=v36();end v68[v76]=v79;break;end end end v66[3]=v32();for v80=1,v34() do local v81=v32();if (v31(v81,1,1)==(877 -(282 + 595))) then local v106=v31(v81,2,3);local v107=v31(v81,4,1643 -(1523 + 114) );local v108={v33(),v33(),nil,nil};if (v106==0) then local v117=0;while true do if (v117==0) then v108[3 + 0 ]=v33();v108[4]=v33();break;end end elseif (v106==1) then v108[3]=v34();elseif (v106==2) then v108[3]=v34() -(2^16) ;elseif (v106==3) then local v130=0;while true do if (v130==0) then v108[3]=v34() -(2^(22 -6)) ;v108[4]=v33();break;end end end if (v31(v107,1,1)==1) then v108[2]=v68[v108[1067 -(68 + 997) ]];end if (v31(v107,2,2)==1) then v108[3]=v68[v108[3]];end if (v31(v107,3,3)==1) then v108[4]=v68[v108[4]];end v63[v80]=v108;end end for v82=1,v34() do v64[v82-1 ]=v39();end return v66;end local function v40(v70,v71,v72) local v73=v70[1];local v74=v70[2];local v75=v70[3];return function(...) local v84=v73;local v85=v74;local v86=v75;local v87=v38;local v88=1;local v89= -(1271 -(226 + 1044));local v90={};local v91={...};local v92=v20("#",...) -1 ;local v93={};local v94={};for v103=0 -0 ,v92 do if (v103>=v86) then v90[v103-v86 ]=v91[v103 + 1 ];else v94[v103]=v91[v103 + 1 ];end end local v95=(v92-v86) + 1 ;local v96;local v97;while true do v96=v84[v88];v97=v96[1];if (v97<=51) then if (v97<=(142 -(32 + 85))) then if (v97<=12) then if (v97<=5) then if (v97<=2) then if (v97<=0) then v94[v96[2]]=v40(v85[v96[3]],nil,v72);elseif (v97==1) then local v175=0;local v176;while true do if (v175==0) then v176=v96[2];v94[v176](v21(v94,v176 + 1 + 0 ,v96[1 + 2 ]));break;end end else v94[v96[2]]=v94[v96[3]][v96[4]];end elseif (v97<=3) then local v134=0;local v135;while true do if (v134==0) then v135=v96[959 -(892 + 65) ];v94[v135](v21(v94,v135 + 1 ,v89));break;end end elseif (v97==4) then v94[v96[2]]=v94[v96[3]][v96[4]];else local v181=v96[2];local v182,v183=v87(v94[v181](v21(v94,v181 + 1 ,v96[3])));v89=(v183 + v181) -1 ;local v184=0;for v331=v181,v89 do local v332=0;while true do if (v332==0) then v184=v184 + 1 ;v94[v331]=v182[v184];break;end end end end elseif (v97<=(18 -10)) then if (v97<=6) then v94[v96[2]]=v96[3];elseif (v97==(12 -5)) then local v185=0;local v186;local v187;local v188;while true do if (v185==1) then v188=0;for v426=v186,v96[7 -3 ] do local v427=0;while true do if (v427==0) then v188=v188 + 1 ;v94[v426]=v187[v188];break;end end end break;end if (v185==0) then v186=v96[2];v187={v94[v186](v94[v186 + 1 ])};v185=1;end end else local v189=0;local v190;local v191;while true do if (v189==0) then v190=v96[2];v191={};v189=1;end if (v189==1) then for v428=1, #v93 do local v429=0;local v430;while true do if (v429==0) then v430=v93[v428];for v485=0, #v430 do local v486=0;local v487;local v488;local v489;while true do if (v486==0) then v487=v430[v485];v488=v487[1];v486=1;end if (v486==1) then v489=v487[2];if ((v488==v94) and (v489>=v190)) then local v497=0;while true do if (v497==0) then v191[v489]=v488[v489];v487[1]=v191;break;end end end break;end end end break;end end end break;end end end elseif (v97<=10) then if (v97==9) then local v192=0;local v193;local v194;local v195;while true do if (0==v192) then v193=v96[2];v194=v94[v193];v192=1;end if (1==v192) then v195=v94[v193 + 2 ];if (v195>(350 -(87 + 263))) then if (v194>v94[v193 + 1 ]) then v88=v96[3];else v94[v193 + 3 ]=v194;end elseif (v194<v94[v193 + 1 ]) then v88=v96[3];else v94[v193 + 3 ]=v194;end break;end end elseif (v96[182 -(67 + 113) ]==v94[v96[4]]) then v88=v88 + 1 ;else v88=v96[3];end elseif (v97==11) then if (v94[v96[2]]==v94[v96[4]]) then v88=v88 + 1 ;else v88=v96[3];end else local v196=0;local v197;while true do if (v196==0) then v197=v96[2];v94[v197](v94[v197 + 1 + 0 ]);break;end end end elseif (v97<=(44 -26)) then if (v97<=(12 + 3)) then if (v97<=13) then do return v94[v96[2]]();end elseif (v97==14) then v88=v96[3];elseif (v94[v96[7 -5 ]]==v96[4]) then v88=v88 + 1 ;else v88=v96[3];end elseif (v97<=16) then v94[v96[2]]=v94[v96[3]]/v94[v96[4]] ;elseif (v97>17) then v94[v96[2]]=v94[v96[3]] + v96[4] ;elseif (v94[v96[2]]~=v94[v96[4]]) then v88=v88 + 1 ;else v88=v96[3];end elseif (v97<=21) then if (v97<=19) then v94[v96[2]]=v94[v96[3]] -v94[v96[4]] ;elseif (v97>20) then local v200=v96[2];v94[v200]=v94[v200](v21(v94,v200 + 1 ,v96[955 -(802 + 150) ]));else v94[v96[2]]={};end elseif (v97<=23) then if (v97==22) then v88=v96[3];else local v204=v96[3];local v205=v94[v204];for v333=v204 + 1 ,v96[4] do v205=v205   .. v94[v333] ;end v94[v96[2]]=v205;end elseif (v97>24) then v94[v96[2]]=v94[v96[3]][v94[v96[10 -6 ]]];else v94[v96[2]]=v40(v85[v96[3]],nil,v72);end elseif (v97<=38) then if (v97<=31) then if (v97<=28) then if (v97<=26) then local v140=0;local v141;local v142;local v143;while true do if (v140==1) then v143=v96[3];for v380=1,v143 do v142[v380]=v94[v141 + v380 ];end break;end if (0==v140) then v141=v96[2];v142=v94[v141];v140=1;end end elseif (v97==27) then local v210=0;local v211;while true do if (v210==0) then v211=v96[2];do return v21(v94,v211,v89);end break;end end else v94[v96[2]]=v94[v96[5 -2 ]]/v94[v96[4]] ;end elseif (v97<=29) then v94[v96[2]]=v94[v96[3]]%v96[4] ;elseif (v97==30) then local v213=0;local v214;while true do if (v213==0) then v214=v96[2];v94[v214](v94[v214 + 1 ]);break;end end else v94[v96[2]]=v96[3];end elseif (v97<=34) then if (v97<=32) then local v145=v96[2];v94[v145](v21(v94,v145 + 1 ,v89));elseif (v97>33) then v94[v96[2]]=v94[v96[3]] * v94[v96[4]] ;else v94[v96[2]]=v96[3]~=(0 + 0) ;end elseif (v97<=(1033 -(915 + 82))) then if (v97==35) then local v219=v96[2];v94[v219]=v94[v219](v21(v94,v219 + 1 ,v96[3]));else local v221=v85[v96[3]];local v222;local v223={};v222=v18({},{[v7("\17\148\66\201\83\169\54","\204\78\203\43\167\55")]=function(v337,v338) local v339=v223[v338];return v339[1][v339[2]];end,[v7("\110\154\164\38\9\181\95\161\175\59","\220\49\197\202\67\126")]=function(v340,v341,v342) local v343=0;local v344;while true do if (v343==0) then v344=v223[v341];v344[1][v344[2]]=v342;break;end end end});for v345=1,v96[4] do local v346=0;local v347;while true do if (v346==0) then v88=v88 + 1 ;v347=v84[v88];v346=1;end if (1==v346) then if (v347[1]==48) then v223[v345-1 ]={v94,v347[3]};else v223[v345-1 ]={v71,v347[3]};end v93[ #v93 + 1 ]=v223;break;end end end v94[v96[5 -3 ]]=v40(v221,v222,v72);end elseif (v97==37) then do return;end else local v225=v96[2 + 0 ];local v226=v96[4];local v227=v225 + (2 -0) ;local v228={v94[v225](v94[v225 + (1188 -(1069 + 118)) ],v94[v227])};for v348=1,v226 do v94[v227 + v348 ]=v228[v348];end local v229=v228[1];if v229 then local v383=0;while true do if (v383==0) then v94[v227]=v229;v88=v96[3];break;end end else v88=v88 + 1 ;end end elseif (v97<=44) then if (v97<=41) then if (v97<=39) then if (v94[v96[2]]==v96[4]) then v88=v88 + 1 ;else v88=v96[3];end elseif (v97>40) then v94[v96[2]]=v96[3] + v94[v96[4]] ;else v94[v96[4 -2 ]]=v94[v96[3]][v94[v96[4]]];end elseif (v97<=42) then v71[v96[3]]=v94[v96[2]];elseif (v97>43) then local v234=0;local v235;local v236;local v237;while true do if (v234==0) then v235=v96[2];v236=v94[v235];v234=1;end if (v234==1) then v237=v96[6 -3 ];for v435=1 + 0 ,v237 do v236[v435]=v94[v235 + v435 ];end break;end end else local v238=v96[2];v94[v238]=v94[v238]();end elseif (v97<=(83 -36)) then if (v97<=45) then local v148=0;local v149;local v150;while true do if (v148==0) then v149=v96[2];v150=v94[v149];v148=1;end if (v148==1) then for v384=v149 + 1 ,v89 do v15(v150,v94[v384]);end break;end end elseif (v97>(46 + 0)) then v94[v96[2]]=v94[v96[794 -(368 + 423) ]]%v96[4] ;else v94[v96[2]]={};end elseif (v97<=(153 -104)) then if (v97>48) then local v242=v96[20 -(10 + 8) ];local v243,v244=v87(v94[v242](v21(v94,v242 + 1 ,v96[3])));v89=(v244 + v242) -1 ;local v245=0;for v353=v242,v89 do v245=v245 + (3 -2) ;v94[v353]=v243[v245];end else v94[v96[2]]=v94[v96[3]];end elseif (v97>50) then v94[v96[2]]=v94[v96[3]] + v94[v96[4]] ;else local v249=0;local v250;local v251;local v252;local v253;while true do if (v249==1) then v89=(v252 + v250) -1 ;v253=0;v249=2;end if (v249==2) then for v438=v250,v89 do local v439=0;while true do if (v439==0) then v253=v253 + 1 ;v94[v438]=v251[v253];break;end end end break;end if (v249==0) then v250=v96[2];v251,v252=v87(v94[v250](v21(v94,v250 + 1 ,v89)));v249=1;end end end elseif (v97<=(519 -(416 + 26))) then if (v97<=64) then if (v97<=57) then if (v97<=54) then if (v97<=52) then local v151=v96[2];v94[v151]=v94[v151](v21(v94,v151 + (3 -2) ,v89));elseif (v97==53) then if  not v94[v96[2]] then v88=v88 + 1 + 0 ;else v88=v96[3];end else local v254=0;local v255;local v256;local v257;local v258;while true do if (1==v254) then v89=(v257 + v255) -1 ;v258=0;v254=2;end if (v254==2) then for v440=v255,v89 do v258=v258 + 1 ;v94[v440]=v256[v258];end break;end if (v254==0) then v255=v96[2];v256,v257=v87(v94[v255](v21(v94,v255 + 1 ,v89)));v254=1;end end end elseif (v97<=55) then local v153=v96[2];v94[v153]=v94[v153](v94[v153 + 1 ]);elseif (v97==56) then local v259=v85[v96[4 -1 ]];local v260;local v261={};v260=v18({},{[v7("\248\251\87\57\95\1\223","\100\167\164\62\87\59")]=function(v356,v357) local v358=0;local v359;while true do if (v358==0) then v359=v261[v357];return v359[1][v359[2]];end end end,[v7("\191\105\78\204\240\11\39\132\83\88","\73\224\54\32\169\135\98")]=function(v360,v361,v362) local v363=v261[v361];v363[1][v363[2]]=v362;end});for v365=1,v96[4] do v88=v88 + 1 ;local v366=v84[v88];if (v366[1]==(486 -(145 + 293))) then v261[v365-1 ]={v94,v366[3]};else v261[v365-1 ]={v71,v366[3]};end v93[ #v93 + 1 ]=v261;end v94[v96[2]]=v40(v259,v260,v72);else v94[v96[2]]=v72[v96[433 -(44 + 386) ]];end elseif (v97<=60) then if (v97<=58) then for v171=v96[2],v96[3] do v94[v171]=nil;end elseif (v97==59) then if (v96[1488 -(998 + 488) ]==v94[v96[4]]) then v88=v88 + 1 ;else v88=v96[3];end else local v265=0;local v266;local v267;while true do if (0==v265) then v266=v96[2];v267=v94[v266];v265=1;end if (v265==1) then for v444=v266 + 1 ,v96[3] do v15(v267,v94[v444]);end break;end end end elseif (v97<=62) then if (v97==61) then local v268=v96[2];local v269=v94[v268];local v270=v94[v268 + 2 ];if (v270>0) then if (v269>v94[v268 + 1 ]) then v88=v96[3];else v94[v268 + 3 ]=v269;end elseif (v269<v94[v268 + 1 ]) then v88=v96[3];else v94[v268 + 3 ]=v269;end else v94[v96[2]]=v94[v96[3]]%v94[v96[2 + 2 ]] ;end elseif (v97>(52 + 11)) then v94[v96[2]]=v71[v96[3]];else v94[v96[2]]=v94[v96[3]] * v94[v96[776 -(201 + 571) ]] ;end elseif (v97<=70) then if (v97<=67) then if (v97<=65) then local v155=0;local v156;local v157;while true do if (v155==1) then for v387=1, #v93 do local v388=0;local v389;while true do if (v388==0) then v389=v93[v387];for v464=0, #v389 do local v465=v389[v464];local v466=v465[1];local v467=v465[2];if ((v466==v94) and (v467>=v156)) then local v490=0;while true do if (v490==0) then v157[v467]=v466[v467];v465[1]=v157;break;end end end end break;end end end break;end if (v155==0) then v156=v96[1140 -(116 + 1022) ];v157={};v155=1;end end elseif (v97==66) then v94[v96[2]]=v94[v96[3]] + v96[4] ;else local v276=v96[8 -6 ];v94[v276]=v94[v276]();end elseif (v97<=68) then for v173=v96[2],v96[3] do v94[v173]=nil;end elseif (v97>69) then local v278=0;local v279;local v280;local v281;local v282;while true do if (0==v278) then v279=v96[2];v280,v281=v87(v94[v279](v94[v279 + 1 ]));v278=1;end if (v278==1) then v89=(v281 + v279) -1 ;v282=0;v278=2;end if (v278==2) then for v449=v279,v89 do v282=v282 + 1 ;v94[v449]=v280[v282];end break;end end else local v283=v96[2];local v284=v94[v283 + 2 + 0 ];local v285=v94[v283] + v284 ;v94[v283]=v285;if (v284>0) then if (v285<=v94[v283 + 1 ]) then local v452=0;while true do if (v452==0) then v88=v96[3];v94[v283 + 3 ]=v285;break;end end end elseif (v285>=v94[v283 + 1 ]) then local v453=0;while true do if (v453==0) then v88=v96[3];v94[v283 + 3 ]=v285;break;end end end end elseif (v97<=73) then if (v97<=71) then if (v94[v96[2]]==v94[v96[4]]) then v88=v88 + 1 ;else v88=v96[3];end elseif (v97>(262 -190)) then v94[v96[2]]=v96[3]~=0 ;elseif v94[v96[2]] then v88=v88 + 1 ;else v88=v96[3];end elseif (v97<=(266 -191)) then if (v97>74) then local v289=0;local v290;while true do if (v289==0) then v290=v96[2];do return v21(v94,v290,v89);end break;end end else local v291=v96[861 -(814 + 45) ];local v292=v96[4];local v293=v291 + 2 ;local v294={v94[v291](v94[v291 + 1 ],v94[v293])};for v369=1,v292 do v94[v293 + v369 ]=v294[v369];end local v295=v294[1];if v295 then v94[v293]=v295;v88=v96[3];else v88=v88 + 1 ;end end elseif (v97==76) then v94[v96[2]][v94[v96[3]]]=v94[v96[4]];else local v298=v96[4 -2 ];local v299=v94[v298 + 1 + 1 ];local v300=v94[v298] + v299 ;v94[v298]=v300;if (v299>0) then if (v300<=v94[v298 + 1 ]) then local v454=0;while true do if (v454==0) then v88=v96[3];v94[v298 + 3 ]=v300;break;end end end elseif (v300>=v94[v298 + 1 + 0 ]) then v88=v96[888 -(261 + 624) ];v94[v298 + 3 ]=v300;end end elseif (v97<=90) then if (v97<=83) then if (v97<=80) then if (v97<=78) then local v158=0;local v159;local v160;local v161;local v162;while true do if (v158==1) then v89=(v161 + v159) -1 ;v162=0;v158=2;end if (0==v158) then v159=v96[2];v160,v161=v87(v94[v159](v94[v159 + 1 ]));v158=1;end if (v158==2) then for v393=v159,v89 do v162=v162 + 1 ;v94[v393]=v160[v162];end break;end end elseif (v97>79) then local v302=0;local v303;while true do if (v302==0) then v303=v96[2];v94[v303]=v94[v303](v21(v94,v303 + 1 ,v89));break;end end else local v304=v96[3];local v305=v94[v304];for v373=v304 + 1 ,v96[4] do v305=v305   .. v94[v373] ;end v94[v96[2]]=v305;end elseif (v97<=(143 -62)) then v94[v96[2]][v94[v96[3]]]=v94[v96[4]];elseif (v97>82) then if (v94[v96[2]]~=v94[v96[4]]) then v88=v88 + (1081 -(1020 + 60)) ;else v88=v96[3];end else v94[v96[2]]=v94[v96[3]]%v94[v96[4]] ;end elseif (v97<=86) then if (v97<=84) then v94[v96[2]]=v72[v96[3]];elseif (v97==85) then local v308=0;local v309;local v310;local v311;while true do if (v308==1) then v311=0;for v457=v309,v96[4] do local v458=0;while true do if (v458==0) then v311=v311 + 1 ;v94[v457]=v310[v311];break;end end end break;end if (0==v308) then v309=v96[2];v310={v94[v309](v94[v309 + 1 ])};v308=1;end end else v94[v96[2]]=v94[v96[3]] + v94[v96[4]] ;end elseif (v97<=88) then if (v97>87) then if v94[v96[2]] then v88=v88 + 1 ;else v88=v96[3];end else local v313=v96[2];local v314=v94[v313];for v374=v313 + 1 ,v96[3] do v15(v314,v94[v374]);end end elseif (v97>89) then v94[v96[6 -4 ]]=v96[3] + v94[v96[4]] ;else v94[v96[2]]=v94[v96[3]];end elseif (v97<=96) then if (v97<=93) then if (v97<=91) then v94[v96[2]]=v71[v96[3]];elseif (v97==92) then do return;end else v71[v96[3]]=v94[v96[2]];end elseif (v97<=94) then v94[v96[2]]= #v94[v96[3]];elseif (v97==95) then local v320=0;local v321;while true do if (0==v320) then v321=v96[2];do return v94[v321](v21(v94,v321 + 1 ,v96[3]));end break;end end else v94[v96[9 -7 ]]=v94[v96[3]] -v94[v96[4]] ;end elseif (v97<=99) then if (v97<=97) then local v170=v96[2];do return v94[v170](v21(v94,v170 + 1 ,v96[3]));end elseif (v97==98) then do return v94[v96[2]]();end elseif  not v94[v96[2]] then v88=v88 + 1 + 0 ;else v88=v96[9 -6 ];end elseif (v97<=101) then if (v97==100) then local v323=v96[2];v94[v323]=v94[v323](v94[v323 + 1 ]);else v94[v96[2]]= #v94[v96[3]];end elseif (v97>102) then local v326=0;local v327;while true do if (v326==0) then v327=v96[2];v94[v327](v21(v94,v327 + 1 ,v96[3]));break;end end else local v328=v96[2];local v329=v94[v328];for v375=v328 + 1 ,v89 do v15(v329,v94[v375]);end end v88=v88 + 1 ;end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
-- ⚠️ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.9) ~  Much Love, Ferib 

]]--